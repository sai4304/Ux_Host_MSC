ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"txe_block_pool_create.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._txe_block_pool_create,"ax",%progbits
  20              		.align	1
  21              		.global	_txe_block_pool_create
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_txe_block_pool_create:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "Middlewares/ST/threadx/common/src/txe_block_pool_create.c"
   1:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  12:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  13:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**   Block Pool                                                          */
  19:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  23:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  25:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  26:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  28:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #include "tx_initialize.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 2


  30:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #include "tx_thread.h"
  31:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #include "tx_timer.h"
  32:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #include "tx_block_pool.h"
  33:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  34:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  35:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  36:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  37:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  FUNCTION                                               RELEASE        */
  38:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  39:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    _txe_block_pool_create                              PORTABLE C      */
  40:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                           6.1          */
  41:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  AUTHOR                                                                */
  42:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  43:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    William E. Lamie, Microsoft Corporation                             */
  44:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  45:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  DESCRIPTION                                                           */
  46:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  47:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    This function checks for errors in the create block memory pool     */
  48:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    function call.                                                      */
  49:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  50:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  INPUT                                                                 */
  51:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  52:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    pool_ptr                          Pointer to pool control block     */
  53:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    name_ptr                          Pointer to block pool name        */
  54:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    block_size                        Number of bytes in each block     */
  55:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    pool_start                        Address of beginning of pool area */
  56:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    pool_size                         Number of bytes in the block pool */
  57:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    pool_control_block_size           Size of block pool control block  */
  58:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  59:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  OUTPUT                                                                */
  60:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  61:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    TX_POOL_ERROR                     Invalid pool pointer              */
  62:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    TX_PTR_ERROR                      Invalid starting address          */
  63:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    TX_SIZE_ERROR                     Invalid pool size                 */
  64:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    TX_CALLER_ERROR                   Invalid caller of pool            */
  65:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    status                            Actual completion status          */
  66:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  67:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  CALLS                                                                 */
  68:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  69:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    _tx_block_pool_create             Actual block pool create function */
  70:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    _tx_thread_system_preempt_check   Check for preemption              */
  71:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  72:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  CALLED BY                                                             */
  73:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  74:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    Application Code                                                    */
  75:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  76:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  RELEASE HISTORY                                                       */
  77:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  78:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*    DATE              NAME                      DESCRIPTION             */
  79:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  80:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  81:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  82:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                            resulting in version 6.1    */
  83:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /*                                                                        */
  84:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** /**************************************************************************/
  85:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** UINT  _txe_block_pool_create(TX_BLOCK_POOL *pool_ptr, CHAR *name_ptr, ULONG block_size,
  86:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     VOID *pool_start, ULONG pool_size, UINT pool_control_block_size)
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 3


  87:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** {
  30              		.loc 1 87 1 view -0
  31              		.cfi_startproc
  32              		@ args = 8, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  88:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  89:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** TX_INTERRUPT_SAVE_AREA
  34              		.loc 1 89 1 view .LVU1
  90:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  91:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** UINT            status;
  35              		.loc 1 91 1 view .LVU2
  92:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** ULONG           i;
  36              		.loc 1 92 1 view .LVU3
  93:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** TX_BLOCK_POOL   *next_pool;
  37              		.loc 1 93 1 view .LVU4
  94:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #ifndef TX_TIMER_PROCESS_IN_ISR
  95:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** TX_THREAD       *thread_ptr;
  38              		.loc 1 95 1 view .LVU5
  96:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #endif
  97:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  98:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  99:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     /* Default status to success.  */
 100:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     status =  TX_SUCCESS;
  39              		.loc 1 100 5 view .LVU6
 101:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 102:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     /* Check for an invalid pool pointer.  */
 103:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     if (pool_ptr == TX_NULL)
  40              		.loc 1 103 5 view .LVU7
  41              		.loc 1 103 8 is_stmt 0 view .LVU8
  42 0000 0028     		cmp	r0, #0
  43 0002 59D0     		beq	.L8
  87:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  44              		.loc 1 87 1 view .LVU9
  45 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 28
  48              		.cfi_offset 4, -28
  49              		.cfi_offset 5, -24
  50              		.cfi_offset 6, -20
  51              		.cfi_offset 7, -16
  52              		.cfi_offset 8, -12
  53              		.cfi_offset 9, -8
  54              		.cfi_offset 14, -4
  55 0008 83B0     		sub	sp, sp, #12
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 40
  58 000a 8946     		mov	r9, r1
  59 000c 9046     		mov	r8, r2
  60 000e 1F46     		mov	r7, r3
  61 0010 0646     		mov	r6, r0
 104:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 105:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 106:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Pool pointer is invalid, return appropriate error code.  */
 107:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         status =  TX_POOL_ERROR;
 108:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 109:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 110:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     /* Check for invalid control block size.  */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 4


 111:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     else if (pool_control_block_size != (sizeof(TX_BLOCK_POOL)))
  62              		.loc 1 111 10 is_stmt 1 view .LVU10
  63              		.loc 1 111 13 is_stmt 0 view .LVU11
  64 0012 0B9B     		ldr	r3, [sp, #44]
  65              	.LVL1:
  66              		.loc 1 111 13 view .LVU12
  67 0014 302B     		cmp	r3, #48
  68 0016 03D0     		beq	.L19
 112:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 113:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 114:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Pool pointer is invalid, return appropriate error code.  */
 115:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         status =  TX_POOL_ERROR;
  69              		.loc 1 115 16 view .LVU13
  70 0018 0220     		movs	r0, #2
  71              	.LVL2:
  72              	.L1:
 116:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 117:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     else
 118:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 119:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 120:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Disable interrupts.  */
 121:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         TX_DISABLE
 122:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 123:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Increment the preempt disable flag.  */
 124:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         _tx_thread_preempt_disable++;
 125:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 126:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Restore interrupts.  */
 127:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         TX_RESTORE
 128:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 129:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Next see if it is already in the created list.  */
 130:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         next_pool =   _tx_block_pool_created_ptr;
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         for (i = ((ULONG) 0); i < _tx_block_pool_created_count; i++)
 132:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 133:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 134:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             /* Determine if this block pool matches the pool in the list.  */
 135:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             if (pool_ptr == next_pool)
 136:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 137:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 138:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 break;
 139:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 140:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             else
 141:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 142:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 /* Move to the next pool.  */
 143:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 next_pool =  next_pool -> tx_block_pool_created_next;
 144:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 145:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 146:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 147:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Disable interrupts.  */
 148:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         TX_DISABLE
 149:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 150:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Decrement the preempt disable flag.  */
 151:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         _tx_thread_preempt_disable--;
 152:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 153:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Restore interrupts.  */
 154:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         TX_RESTORE
 155:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 156:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Check for preemption.  */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 5


 157:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         _tx_thread_system_preempt_check();
 158:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 159:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* At this point, check to see if there is a duplicate pool.  */
 160:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         if (pool_ptr == next_pool)
 161:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 162:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 163:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             /* Pool is already created, return appropriate error code.  */
 164:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             status =  TX_POOL_ERROR;
 165:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 166:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 167:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Check for an invalid starting address.  */
 168:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         else if (pool_start == TX_NULL)
 169:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 170:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 171:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             /* Null starting address pointer, return appropriate error.  */
 172:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             status =  TX_PTR_ERROR;
 173:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 174:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         else
 175:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 176:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 177:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             /* Check for invalid pool size.  */
 178:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             if ((((block_size/(sizeof(void *)))*(sizeof(void *))) + (sizeof(void *))) >
 179:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                                             ((pool_size/(sizeof(void *)))*(sizeof(void *))))
 180:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 181:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 182:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 /* Not enough memory for one block, return appropriate error.  */
 183:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 status =  TX_SIZE_ERROR;
 184:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 185:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             else
 186:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 187:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 188:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #ifndef TX_TIMER_PROCESS_IN_ISR
 189:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 190:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 /* Pickup thread pointer.  */
 191:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 TX_THREAD_GET_CURRENT(thread_ptr)
 192:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 193:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 /* Check for invalid caller of this function.  First check for a calling thread.  *
 194:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 if (thread_ptr == &_tx_timer_thread)
 195:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 196:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 197:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     /* Invalid caller of this function, return appropriate error code.  */
 198:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     status =  TX_CALLER_ERROR;
 199:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 }
 200:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** #endif
 201:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 202:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 /* Check for interrupt call.  */
 203:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
 204:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 205:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 206:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     /* Now, make sure the call is from an interrupt and not initialization.  */
 207:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
 208:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     {
 209:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 210:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                         /* Invalid caller of this function, return appropriate error code.  */
 211:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                         status =  TX_CALLER_ERROR;
 212:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     }
 213:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 }
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 6


 214:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 215:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 216:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 217:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 218:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     /* Determine if everything is okay.  */
 219:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     if (status == TX_SUCCESS)
 220:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 221:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 222:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         /* Call actual block pool create function.  */
 223:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         status =  _tx_block_pool_create(pool_ptr, name_ptr, block_size, pool_start, pool_size);
 224:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 225:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 226:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     /* Return completion status.  */
 227:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     return(status);
 228:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** }
  73              		.loc 1 228 1 view .LVU14
  74 001a 03B0     		add	sp, sp, #12
  75              	.LCFI2:
  76              		.cfi_remember_state
  77              		.cfi_def_cfa_offset 28
  78              		@ sp needed
  79 001c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
  80              	.LVL3:
  81              	.L19:
  82              	.LCFI3:
  83              		.cfi_restore_state
 121:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
  84              		.loc 1 121 9 is_stmt 1 view .LVU15
  85              	.LBB20:
  86              	.LBI20:
  87              		.file 2 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 7


  27:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 8


  84:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 9


 141:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 10


 198:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 11


 255:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 12


 312:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 13


 369:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 14


 426:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 15


 483:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 487:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 504:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 522:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 528:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 16


 540:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 544:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 561:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  88              		.loc 2 578 63 view .LVU16
  89              	.LBB21:
 579:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  90              		.loc 2 580 1 view .LVU17
 581:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 582:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  91              		.loc 2 582 5 view .LVU18
  92              	.LBB22:
  93              	.LBI22:
 545:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  94              		.loc 2 545 63 view .LVU19
  95              	.LBB23:
 547:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  96              		.loc 2 547 1 view .LVU20
 551:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  97              		.loc 2 551 5 view .LVU21
  98              		.syntax unified
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 17


  99              	@ 551 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 100 0020 EFF31081 		MRS  r1, PRIMASK 
 101              	@ 0 "" 2
 102              	.LVL4:
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 103              		.loc 2 553 5 view .LVU22
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 104              		.loc 2 553 5 is_stmt 0 view .LVU23
 105              		.thumb
 106              		.syntax unified
 107              	.LBE23:
 108              	.LBE22:
 583:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
 109              		.loc 2 587 5 is_stmt 1 view .LVU24
 110              		.syntax unified
 111              	@ 587 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 112 0024 72B6     		CPSID i
 113              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
 114              		.loc 2 589 5 view .LVU25
 115              	.LVL5:
 116              		.loc 2 589 5 is_stmt 0 view .LVU26
 117              		.thumb
 118              		.syntax unified
 119              	.LBE21:
 120              	.LBE20:
 124:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 121              		.loc 1 124 9 is_stmt 1 view .LVU27
 124:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 122              		.loc 1 124 35 is_stmt 0 view .LVU28
 123 0026 294A     		ldr	r2, .L20
 124              	.LVL6:
 124:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 125              		.loc 1 124 35 view .LVU29
 126 0028 1368     		ldr	r3, [r2]
 127 002a 0133     		adds	r3, r3, #1
 128 002c 1360     		str	r3, [r2]
 127:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 129              		.loc 1 127 9 is_stmt 1 view .LVU30
 130              	.LVL7:
 131              	.LBB24:
 132              	.LBI24:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 133              		.loc 2 568 55 view .LVU31
 134              	.LBB25:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 135              		.loc 2 574 5 view .LVU32
 136              		.syntax unified
 137              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 138 002e 81F31088 		MSR  PRIMASK,r1
 139              	@ 0 "" 2
 140              	.LVL8:
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 18


 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 141              		.loc 2 574 5 is_stmt 0 view .LVU33
 142              		.thumb
 143              		.syntax unified
 144              	.LBE25:
 145              	.LBE24:
 130:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         for (i = ((ULONG) 0); i < _tx_block_pool_created_count; i++)
 146              		.loc 1 130 9 is_stmt 1 view .LVU34
 130:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         for (i = ((ULONG) 0); i < _tx_block_pool_created_count; i++)
 147              		.loc 1 130 19 is_stmt 0 view .LVU35
 148 0032 274B     		ldr	r3, .L20+4
 149 0034 1C68     		ldr	r4, [r3]
 150              	.LVL9:
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 151              		.loc 1 131 9 is_stmt 1 view .LVU36
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 152              		.loc 1 131 16 is_stmt 0 view .LVU37
 153 0036 0020     		movs	r0, #0
 154              	.LVL10:
 155              	.L3:
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 156              		.loc 1 131 31 is_stmt 1 discriminator 1 view .LVU38
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 157              		.loc 1 131 33 is_stmt 0 discriminator 1 view .LVU39
 158 0038 264D     		ldr	r5, .L20+8
 159 003a 2D68     		ldr	r5, [r5]
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 160              		.loc 1 131 9 discriminator 1 view .LVU40
 161 003c 8542     		cmp	r5, r0
 162 003e 04D9     		bls	.L4
 135:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 163              		.loc 1 135 13 is_stmt 1 view .LVU41
 135:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 164              		.loc 1 135 16 is_stmt 0 view .LVU42
 165 0040 B442     		cmp	r4, r6
 166 0042 02D0     		beq	.L4
 143:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 167              		.loc 1 143 17 is_stmt 1 discriminator 2 view .LVU43
 143:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 168              		.loc 1 143 27 is_stmt 0 discriminator 2 view .LVU44
 169 0044 A46A     		ldr	r4, [r4, #40]
 170              	.LVL11:
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 171              		.loc 1 131 65 is_stmt 1 discriminator 2 view .LVU45
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 172              		.loc 1 131 66 is_stmt 0 discriminator 2 view .LVU46
 173 0046 0130     		adds	r0, r0, #1
 174              	.LVL12:
 131:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 175              		.loc 1 131 66 discriminator 2 view .LVU47
 176 0048 F6E7     		b	.L3
 177              	.L4:
 148:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 178              		.loc 1 148 9 is_stmt 1 view .LVU48
 179              	.LBB26:
 180              	.LBI26:
 578:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 19


 181              		.loc 2 578 63 view .LVU49
 182              	.LBB27:
 580:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183              		.loc 2 580 1 view .LVU50
 582:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 184              		.loc 2 582 5 view .LVU51
 185              	.LBB28:
 186              	.LBI28:
 545:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 187              		.loc 2 545 63 view .LVU52
 188              	.LBB29:
 547:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 189              		.loc 2 547 1 view .LVU53
 551:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 190              		.loc 2 551 5 view .LVU54
 191              		.syntax unified
 192              	@ 551 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 193 004a EFF31081 		MRS  r1, PRIMASK 
 194              	@ 0 "" 2
 195              	.LVL13:
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 196              		.loc 2 553 5 view .LVU55
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 197              		.loc 2 553 5 is_stmt 0 view .LVU56
 198              		.thumb
 199              		.syntax unified
 200              	.LBE29:
 201              	.LBE28:
 587:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 202              		.loc 2 587 5 is_stmt 1 view .LVU57
 203              		.syntax unified
 204              	@ 587 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 205 004e 72B6     		CPSID i
 206              	@ 0 "" 2
 207              		.loc 2 589 5 view .LVU58
 208              	.LVL14:
 209              		.loc 2 589 5 is_stmt 0 view .LVU59
 210              		.thumb
 211              		.syntax unified
 212              	.LBE27:
 213              	.LBE26:
 151:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 214              		.loc 1 151 9 is_stmt 1 view .LVU60
 151:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 215              		.loc 1 151 35 is_stmt 0 view .LVU61
 216 0050 1E4A     		ldr	r2, .L20
 217 0052 1368     		ldr	r3, [r2]
 218 0054 013B     		subs	r3, r3, #1
 219 0056 1360     		str	r3, [r2]
 154:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 220              		.loc 1 154 9 is_stmt 1 view .LVU62
 221              	.LVL15:
 222              	.LBB30:
 223              	.LBI30:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 224              		.loc 2 568 55 view .LVU63
 225              	.LBB31:
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 20


 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 226              		.loc 2 574 5 view .LVU64
 227              		.syntax unified
 228              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 229 0058 81F31088 		MSR  PRIMASK,r1
 230              	@ 0 "" 2
 231              	.LVL16:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 232              		.loc 2 574 5 is_stmt 0 view .LVU65
 233              		.thumb
 234              		.syntax unified
 235              	.LBE31:
 236              	.LBE30:
 157:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 237              		.loc 1 157 9 is_stmt 1 view .LVU66
 238 005c FFF7FEFF 		bl	_tx_thread_system_preempt_check
 239              	.LVL17:
 160:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 240              		.loc 1 160 9 view .LVU67
 160:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 241              		.loc 1 160 12 is_stmt 0 view .LVU68
 242 0060 B442     		cmp	r4, r6
 243 0062 2BD0     		beq	.L10
 168:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 244              		.loc 1 168 14 is_stmt 1 view .LVU69
 168:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         {
 245              		.loc 1 168 17 is_stmt 0 view .LVU70
 246 0064 67B3     		cbz	r7, .L11
 178:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                                             ((pool_size/(sizeof(void *)))*(sizeof(void *))))
 247              		.loc 1 178 13 is_stmt 1 view .LVU71
 178:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                                             ((pool_size/(sizeof(void *)))*(sizeof(void *))))
 248              		.loc 1 178 48 is_stmt 0 view .LVU72
 249 0066 28F00303 		bic	r3, r8, #3
 178:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                                             ((pool_size/(sizeof(void *)))*(sizeof(void *))))
 250              		.loc 1 178 67 view .LVU73
 251 006a 0433     		adds	r3, r3, #4
 179:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             {
 252              		.loc 1 179 74 view .LVU74
 253 006c 0A9A     		ldr	r2, [sp, #40]
 254 006e 22F00302 		bic	r2, r2, #3
 178:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                                             ((pool_size/(sizeof(void *)))*(sizeof(void *))))
 255              		.loc 1 178 16 view .LVU75
 256 0072 9342     		cmp	r3, r2
 257 0074 26D8     		bhi	.L12
 191:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
 258              		.loc 1 191 17 is_stmt 1 view .LVU76
 259 0076 184B     		ldr	r3, .L20+12
 260 0078 1A68     		ldr	r2, [r3]
 261              	.LVL18:
 194:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 262              		.loc 1 194 17 view .LVU77
 194:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 263              		.loc 1 194 20 is_stmt 0 view .LVU78
 264 007a 184B     		ldr	r3, .L20+16
 265 007c 9A42     		cmp	r2, r3
 266 007e 19D0     		beq	.L13
 100:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 21


 267              		.loc 1 100 12 view .LVU79
 268 0080 0020     		movs	r0, #0
 269              	.L6:
 270              	.LVL19:
 203:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 271              		.loc 1 203 17 is_stmt 1 view .LVU80
 272              	.LBB32:
 273              	.LBI32:
 486:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 274              		.loc 2 486 63 view .LVU81
 275              	.LBB33:
 488:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 276              		.loc 2 488 1 view .LVU82
 489:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 277              		.loc 2 489 5 view .LVU83
 278              		.syntax unified
 279              	@ 489 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 280 0082 EFF30583 		 MRS  r3,IPSR 
 281              	@ 0 "" 2
 282              	.LVL20:
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 283              		.loc 2 490 5 view .LVU84
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 284              		.loc 2 490 5 is_stmt 0 view .LVU85
 285              		.thumb
 286              		.syntax unified
 287              	.LBE33:
 288              	.LBE32:
 203:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 289              		.loc 1 203 21 view .LVU86
 290 0086 164A     		ldr	r2, .L20+20
 291              	.LVL21:
 203:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 292              		.loc 1 203 21 view .LVU87
 293 0088 1268     		ldr	r2, [r2]
 203:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 {
 294              		.loc 1 203 20 view .LVU88
 295 008a 1343     		orrs	r3, r2, r3
 296 008c 07D0     		beq	.L7
 207:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     {
 297              		.loc 1 207 21 is_stmt 1 view .LVU89
 298              	.LBB34:
 299              	.LBI34:
 486:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 300              		.loc 2 486 63 view .LVU90
 301              	.LBB35:
 488:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 302              		.loc 2 488 1 view .LVU91
 489:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 303              		.loc 2 489 5 view .LVU92
 304              		.syntax unified
 305              	@ 489 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 306 008e EFF30582 		 MRS  r2,IPSR 
 307              	@ 0 "" 2
 308              	.LVL22:
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 309              		.loc 2 490 5 view .LVU93
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 22


 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 310              		.loc 2 490 5 is_stmt 0 view .LVU94
 311              		.thumb
 312              		.syntax unified
 313              	.LBE35:
 314              	.LBE34:
 207:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     {
 315              		.loc 1 207 25 view .LVU95
 316 0092 134B     		ldr	r3, .L20+20
 317 0094 1B68     		ldr	r3, [r3]
 318 0096 1343     		orrs	r3, r3, r2
 207:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     {
 319              		.loc 1 207 24 view .LVU96
 320 0098 B3F1F03F 		cmp	r3, #-252645136
 321 009c 14D3     		bcc	.L14
 322              	.L7:
 219:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 323              		.loc 1 219 5 is_stmt 1 view .LVU97
 219:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     {
 324              		.loc 1 219 8 is_stmt 0 view .LVU98
 325 009e 0028     		cmp	r0, #0
 326 00a0 BBD1     		bne	.L1
 223:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 327              		.loc 1 223 9 is_stmt 1 view .LVU99
 223:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 328              		.loc 1 223 19 is_stmt 0 view .LVU100
 329 00a2 0A9B     		ldr	r3, [sp, #40]
 330 00a4 0093     		str	r3, [sp]
 331 00a6 3B46     		mov	r3, r7
 332 00a8 4246     		mov	r2, r8
 333 00aa 4946     		mov	r1, r9
 334 00ac 3046     		mov	r0, r6
 335              	.LVL23:
 223:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 336              		.loc 1 223 19 view .LVU101
 337 00ae FFF7FEFF 		bl	_tx_block_pool_create
 338              	.LVL24:
 223:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 339              		.loc 1 223 19 view .LVU102
 340 00b2 B2E7     		b	.L1
 341              	.LVL25:
 342              	.L13:
 198:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                 }
 343              		.loc 1 198 28 view .LVU103
 344 00b4 1320     		movs	r0, #19
 345 00b6 E4E7     		b	.L6
 346              	.LVL26:
 347              	.L8:
 348              	.LCFI4:
 349              		.cfi_def_cfa_offset 0
 350              		.cfi_restore 4
 351              		.cfi_restore 5
 352              		.cfi_restore 6
 353              		.cfi_restore 7
 354              		.cfi_restore 8
 355              		.cfi_restore 9
 356              		.cfi_restore 14
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 23


 107:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****     }
 357              		.loc 1 107 16 view .LVU104
 358 00b8 0220     		movs	r0, #2
 359              	.LVL27:
 360              		.loc 1 228 1 view .LVU105
 361 00ba 7047     		bx	lr
 362              	.LVL28:
 363              	.L10:
 364              	.LCFI5:
 365              		.cfi_def_cfa_offset 40
 366              		.cfi_offset 4, -28
 367              		.cfi_offset 5, -24
 368              		.cfi_offset 6, -20
 369              		.cfi_offset 7, -16
 370              		.cfi_offset 8, -12
 371              		.cfi_offset 9, -8
 372              		.cfi_offset 14, -4
 164:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 373              		.loc 1 164 20 view .LVU106
 374 00bc 0220     		movs	r0, #2
 375 00be ACE7     		b	.L1
 376              	.L11:
 172:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****         }
 377              		.loc 1 172 20 view .LVU107
 378 00c0 0320     		movs	r0, #3
 379 00c2 AAE7     		b	.L1
 380              	.L12:
 183:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****             }
 381              		.loc 1 183 24 view .LVU108
 382 00c4 0520     		movs	r0, #5
 383 00c6 A8E7     		b	.L1
 384              	.LVL29:
 385              	.L14:
 211:Middlewares/ST/threadx/common/src/txe_block_pool_create.c ****                     }
 386              		.loc 1 211 32 view .LVU109
 387 00c8 1320     		movs	r0, #19
 388              	.LVL30:
 227:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** }
 389              		.loc 1 227 5 is_stmt 1 view .LVU110
 227:Middlewares/ST/threadx/common/src/txe_block_pool_create.c **** }
 390              		.loc 1 227 11 is_stmt 0 view .LVU111
 391 00ca A6E7     		b	.L1
 392              	.L21:
 393              		.align	2
 394              	.L20:
 395 00cc 00000000 		.word	_tx_thread_preempt_disable
 396 00d0 00000000 		.word	_tx_block_pool_created_ptr
 397 00d4 00000000 		.word	_tx_block_pool_created_count
 398 00d8 00000000 		.word	_tx_thread_current_ptr
 399 00dc 00000000 		.word	_tx_timer_thread
 400 00e0 00000000 		.word	_tx_thread_system_state
 401              		.cfi_endproc
 402              	.LFE8:
 404              		.text
 405              	.Letext0:
 406              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 407              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 24


 408              		.file 5 "Middlewares/ST/threadx/common/inc/tx_timer.h"
 409              		.file 6 "Middlewares/ST/threadx/common/inc/tx_block_pool.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 txe_block_pool_create.c
C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s:20     .text._txe_block_pool_create:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s:26     .text._txe_block_pool_create:00000000 _txe_block_pool_create
C:\Users\HP\AppData\Local\Temp\ccOXkpZd.s:395    .text._txe_block_pool_create:000000cc $d

UNDEFINED SYMBOLS
_tx_thread_system_preempt_check
_tx_block_pool_create
_tx_thread_preempt_disable
_tx_block_pool_created_ptr
_tx_block_pool_created_count
_tx_thread_current_ptr
_tx_timer_thread
_tx_thread_system_state
