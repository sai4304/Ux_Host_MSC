ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tx_mutex_get.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._tx_mutex_get,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_mutex_get
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_mutex_get:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "Middlewares/ST/threadx/common/src/tx_mutex_get.c"
   1:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  12:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  13:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**   Mutex                                                               */
  19:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  23:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  25:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  26:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  28:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #include "tx_trace.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 2


  30:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #include "tx_thread.h"
  31:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #include "tx_mutex.h"
  32:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  33:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  34:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  35:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  36:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  FUNCTION                                               RELEASE        */
  37:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  38:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    _tx_mutex_get                                       PORTABLE C      */
  39:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                           6.1          */
  40:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  AUTHOR                                                                */
  41:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  42:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  DESCRIPTION                                                           */
  45:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    This function gets the specified mutex.  If the calling thread      */
  47:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    already owns the mutex, an ownership count is simply increased.     */
  48:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  49:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  INPUT                                                                 */
  50:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  51:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    mutex_ptr                         Pointer to mutex control block    */
  52:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    wait_option                       Suspension option                 */
  53:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  54:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  OUTPUT                                                                */
  55:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  56:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    status                            Completion status                 */
  57:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  58:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  CALLS                                                                 */
  59:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  60:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    _tx_thread_system_suspend         Suspend thread service            */
  61:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    _tx_thread_system_ni_suspend      Non-interruptable suspend thread  */
  62:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    _tx_mutex_priority_change         Inherit thread priority           */
  63:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  64:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  CALLED BY                                                             */
  65:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  66:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    Application Code                                                    */
  67:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  68:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  RELEASE HISTORY                                                       */
  69:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  70:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*    DATE              NAME                      DESCRIPTION             */
  71:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  72:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  73:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  74:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                            resulting in version 6.1    */
  75:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /*                                                                        */
  76:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** /**************************************************************************/
  77:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** UINT  _tx_mutex_get(TX_MUTEX *mutex_ptr, ULONG wait_option)
  78:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 78 1 is_stmt 0 view .LVU1
  35 0000 38B5     		push	{r3, r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 3


  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 0346     		mov	r3, r0
  79:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  80:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_INTERRUPT_SAVE_AREA
  43              		.loc 1 80 1 is_stmt 1 view .LVU2
  81:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  82:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_THREAD       *thread_ptr;
  44              		.loc 1 82 1 view .LVU3
  83:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_MUTEX        *next_mutex;
  45              		.loc 1 83 1 view .LVU4
  84:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_MUTEX        *previous_mutex;
  46              		.loc 1 84 1 view .LVU5
  85:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_THREAD       *mutex_owner;
  47              		.loc 1 85 1 view .LVU6
  86:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_THREAD       *next_thread;
  48              		.loc 1 86 1 view .LVU7
  87:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** TX_THREAD       *previous_thread;
  49              		.loc 1 87 1 view .LVU8
  88:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** UINT            status;
  50              		.loc 1 88 1 view .LVU9
  89:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  90:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  91:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Disable interrupts to get an instance from the mutex.  */
  92:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     TX_DISABLE
  51              		.loc 1 92 5 view .LVU10
  52              	.LBB18:
  53              	.LBI18:
  54              		.file 2 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 4


  27:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 5


  84:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 6


 141:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 7


 198:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 8


 255:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 9


 312:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 10


 369:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 11


 426:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 12


 483:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 487:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 504:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 522:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 528:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 13


 540:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 544:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 561:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  55              		.loc 2 578 63 view .LVU11
  56              	.LBB19:
 579:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int int_posture;
  57              		.loc 2 580 1 view .LVU12
 581:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 582:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  58              		.loc 2 582 5 view .LVU13
  59              	.LBB20:
  60              	.LBI20:
 545:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
  61              		.loc 2 545 63 view .LVU14
  62              	.LBB21:
 547:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  63              		.loc 2 547 1 view .LVU15
 551:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  64              		.loc 2 551 5 view .LVU16
  65              		.syntax unified
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 14


  66              	@ 551 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  67 0004 EFF3108C 		MRS  ip, PRIMASK 
  68              	@ 0 "" 2
  69              	.LVL1:
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  70              		.loc 2 553 5 view .LVU17
 553:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
  71              		.loc 2 553 5 is_stmt 0 view .LVU18
  72              		.thumb
  73              		.syntax unified
  74              	.LBE21:
  75              	.LBE20:
 583:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  76              		.loc 2 587 5 is_stmt 1 view .LVU19
  77              		.syntax unified
  78              	@ 587 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  79 0008 72B6     		CPSID i
  80              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(int_posture);
  81              		.loc 2 589 5 view .LVU20
  82              	.LVL2:
  83              		.loc 2 589 5 is_stmt 0 view .LVU21
  84              		.thumb
  85              		.syntax unified
  86              	.LBE19:
  87              	.LBE18:
  93:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  94:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_MUTEX_ENABLE_PERFORMANCE_INFO
  95:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  96:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Increment the total mutex get counter.  */
  97:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     _tx_mutex_performance_get_count++;
  98:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
  99:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Increment the number of attempts to get this mutex.  */
 100:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     mutex_ptr -> tx_mutex_performance_get_count++;
 101:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 102:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 103:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 104:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_MUTEX_GET, mutex_ptr, wait_option, TX_POINTER_TO_ULONG_CONVERT
 105:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 106:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Log this kernel call.  */
 107:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     TX_EL_MUTEX_GET_INSERT
 108:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 109:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Pickup thread pointer.  */
 110:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     TX_THREAD_GET_CURRENT(thread_ptr)
  88              		.loc 1 110 5 is_stmt 1 view .LVU22
  89 000a 3D4A     		ldr	r2, .L21
  90 000c 1468     		ldr	r4, [r2]
  91              	.LVL3:
 111:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 112:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Determine if this mutex is available.  */
 113:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     if (mutex_ptr -> tx_mutex_ownership_count == ((UINT) 0))
  92              		.loc 1 113 5 view .LVU23
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 15


  93              		.loc 1 113 19 is_stmt 0 view .LVU24
  94 000e 8068     		ldr	r0, [r0, #8]
  95              	.LVL4:
  96              		.loc 1 113 8 view .LVU25
  97 0010 00BB     		cbnz	r0, .L2
 114:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 115:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 116:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Set the ownership count to 1.  */
 117:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         mutex_ptr -> tx_mutex_ownership_count =  ((UINT) 1);
  98              		.loc 1 117 9 is_stmt 1 view .LVU26
  99              		.loc 1 117 47 is_stmt 0 view .LVU27
 100 0012 0122     		movs	r2, #1
 101 0014 9A60     		str	r2, [r3, #8]
 118:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 119:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Remember that the calling thread owns the mutex.  */
 120:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         mutex_ptr -> tx_mutex_owner =  thread_ptr;
 102              		.loc 1 120 9 is_stmt 1 view .LVU28
 103              		.loc 1 120 37 is_stmt 0 view .LVU29
 104 0016 DC60     		str	r4, [r3, #12]
 121:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 122:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Determine if the thread pointer is valid.  */
 123:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         if (thread_ptr != TX_NULL)
 105              		.loc 1 123 9 is_stmt 1 view .LVU30
 106              		.loc 1 123 12 is_stmt 0 view .LVU31
 107 0018 7CB1     		cbz	r4, .L3
 124:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         {
 125:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 126:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Determine if priority inheritance is required.  */
 127:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             if (mutex_ptr -> tx_mutex_inherit == TX_TRUE)
 108              		.loc 1 127 13 is_stmt 1 view .LVU32
 109              		.loc 1 127 27 is_stmt 0 view .LVU33
 110 001a 1A69     		ldr	r2, [r3, #16]
 111              		.loc 1 127 16 view .LVU34
 112 001c 012A     		cmp	r2, #1
 113 001e 0FD0     		beq	.L17
 114              	.L4:
 128:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 129:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 130:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Remember the current priority of thread.  */
 131:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_original_priority =   thread_ptr -> tx_thread_priority;
 132:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 133:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup the highest priority waiting thread.  */
 134:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_highest_priority_waiting =  ((UINT) TX_MAX_PRIORITIES);
 135:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 136:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 137:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Pickup next mutex pointer, which is the head of the list.  */
 138:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             next_mutex =  thread_ptr -> tx_thread_owned_mutex_list;
 115              		.loc 1 138 13 is_stmt 1 view .LVU35
 116              		.loc 1 138 24 is_stmt 0 view .LVU36
 117 0020 D4F8A420 		ldr	r2, [r4, #164]
 118              	.LVL5:
 139:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 140:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Determine if this thread owns any other mutexes that have priority inheritance.  */
 141:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             if (next_mutex != TX_NULL)
 119              		.loc 1 141 13 is_stmt 1 view .LVU37
 120              		.loc 1 141 16 is_stmt 0 view .LVU38
 121 0024 8AB1     		cbz	r2, .L5
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 16


 142:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 143:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 144:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Non-empty list. Link up the mutex.  */
 145:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 146:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Pickup the next and previous mutex pointer.  */
 147:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 previous_mutex =  next_mutex -> tx_mutex_owned_previous;
 122              		.loc 1 147 17 is_stmt 1 view .LVU39
 123              		.loc 1 147 32 is_stmt 0 view .LVU40
 124 0026 116B     		ldr	r1, [r2, #48]
 125              	.LVL6:
 148:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 149:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Place the owned mutex in the list.  */
 150:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 next_mutex -> tx_mutex_owned_previous =  mutex_ptr;
 126              		.loc 1 150 17 is_stmt 1 view .LVU41
 127              		.loc 1 150 55 is_stmt 0 view .LVU42
 128 0028 1363     		str	r3, [r2, #48]
 151:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 previous_mutex -> tx_mutex_owned_next =  mutex_ptr;
 129              		.loc 1 151 17 is_stmt 1 view .LVU43
 130              		.loc 1 151 55 is_stmt 0 view .LVU44
 131 002a CB62     		str	r3, [r1, #44]
 152:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 153:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup this mutex's next and previous created links.  */
 154:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_previous =  previous_mutex;
 132              		.loc 1 154 17 is_stmt 1 view .LVU45
 133              		.loc 1 154 54 is_stmt 0 view .LVU46
 134 002c 1963     		str	r1, [r3, #48]
 155:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_next =      next_mutex;
 135              		.loc 1 155 17 is_stmt 1 view .LVU47
 136              		.loc 1 155 50 is_stmt 0 view .LVU48
 137 002e DA62     		str	r2, [r3, #44]
 138              	.LVL7:
 139              	.L6:
 156:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 157:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             else
 158:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 159:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 160:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* The owned mutex list is empty.  Add mutex to empty list.  */
 161:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_owned_mutex_list =     mutex_ptr;
 162:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_next =             mutex_ptr;
 163:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_previous =         mutex_ptr;
 164:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 165:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 166:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Increment the number of mutexes owned counter.  */
 167:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             thread_ptr -> tx_thread_owned_mutex_count++;
 140              		.loc 1 167 13 is_stmt 1 view .LVU49
 141              		.loc 1 167 24 is_stmt 0 view .LVU50
 142 0030 D4F8A030 		ldr	r3, [r4, #160]
 143              	.LVL8:
 144              		.loc 1 167 54 view .LVU51
 145 0034 0133     		adds	r3, r3, #1
 146 0036 C4F8A030 		str	r3, [r4, #160]
 147              	.LVL9:
 148              	.L3:
 168:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         }
 169:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 170:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Restore interrupts.  */
 171:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         TX_RESTORE
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 17


 149              		.loc 1 171 9 is_stmt 1 view .LVU52
 150              	.LBB22:
 151              	.LBI22:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 152              		.loc 2 568 55 view .LVU53
 153              	.LBB23:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 154              		.loc 2 574 5 view .LVU54
 155              		.syntax unified
 156              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 157 003a 8CF31088 		MSR  PRIMASK,ip
 158              	@ 0 "" 2
 159              	.LVL10:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 160              		.loc 2 574 5 is_stmt 0 view .LVU55
 161              		.thumb
 162              		.syntax unified
 163              	.LBE23:
 164              	.LBE22:
 172:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 173:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Return success.  */
 174:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         status =  TX_SUCCESS;
 165              		.loc 1 174 9 is_stmt 1 view .LVU56
 166              	.L1:
 175:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     }
 176:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 177:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Otherwise, see if the owning thread is trying to obtain the same mutex.  */
 178:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     else if (mutex_ptr -> tx_mutex_owner == thread_ptr)
 179:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 180:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 181:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* The owning thread is requesting the mutex again, just
 182:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****            increment the ownership count.  */
 183:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         mutex_ptr -> tx_mutex_ownership_count++;
 184:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 185:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Restore interrupts.  */
 186:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         TX_RESTORE
 187:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 188:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Return success.  */
 189:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         status =  TX_SUCCESS;
 190:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     }
 191:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     else
 192:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 193:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 194:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         /* Determine if the request specifies suspension.  */
 195:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         if (wait_option != TX_NO_WAIT)
 196:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         {
 197:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 198:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Determine if the preempt disable flag is non-zero.  */
 199:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             if (_tx_thread_preempt_disable != ((UINT) 0))
 200:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 201:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 202:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Restore interrupts.  */
 203:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 TX_RESTORE
 204:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 205:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Suspension is not allowed if the preempt disable flag is non-zero at this point 
 206:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 status =  TX_NOT_AVAILABLE;
 207:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 18


 208:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             else
 209:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 210:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 211:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Prepare for suspension of this thread.  */
 212:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 213:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Pickup the mutex owner.  */
 214:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_owner =  mutex_ptr -> tx_mutex_owner;
 215:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 216:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_MUTEX_ENABLE_PERFORMANCE_INFO
 217:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 218:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Increment the total mutex suspension counter.  */
 219:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 _tx_mutex_performance_suspension_count++;
 220:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 221:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Increment the number of suspensions on this mutex.  */
 222:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_performance_suspension_count++;
 223:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 224:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Determine if a priority inversion is present.  */
 225:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 if (thread_ptr -> tx_thread_priority < mutex_owner -> tx_thread_priority)
 226:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 227:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 228:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Yes, priority inversion is present!  */
 229:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 230:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Increment the total mutex priority inversions counter.  */
 231:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     _tx_mutex_performance_priority_inversion_count++;
 232:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 233:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Increment the number of priority inversions on this mutex.  */
 234:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     mutex_ptr -> tx_mutex_performance_priority_inversion_count++;
 235:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 236:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 237:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 238:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Increment the number of total thread priority inversions.  */
 239:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     _tx_thread_performance_priority_inversion_count++;
 240:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 241:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Increment the number of priority inversions for this thread.  */
 242:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_performance_priority_inversion_count++;
 243:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 244:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 245:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 246:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 247:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup cleanup routine pointer.  */
 248:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_suspend_cleanup =  &(_tx_mutex_cleanup);
 249:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 250:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup cleanup information, i.e. this mutex control
 251:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                    block.  */
 252:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_suspend_control_block =  (VOID *) mutex_ptr;
 253:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 254:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifndef TX_NOT_INTERRUPTABLE
 255:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 256:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Increment the suspension sequence number, which is used to identify
 257:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                    this suspension event.  */
 258:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_suspension_sequence++;
 259:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 260:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 261:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup suspension list.  */
 262:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 if (mutex_ptr -> tx_mutex_suspended_count == TX_NO_SUSPENSIONS)
 263:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 264:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 19


 265:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* No other threads are suspended.  Setup the head pointer and
 266:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                        just setup this threads pointers to itself.  */
 267:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     mutex_ptr -> tx_mutex_suspension_list =         thread_ptr;
 268:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 269:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 270:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 271:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 else
 272:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 273:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 274:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* This list is not NULL, add current thread to the end. */
 275:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     next_thread =                                   mutex_ptr -> tx_mutex_suspensio
 276:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        next_thread;
 277:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread =                               next_thread -> tx_thread_suspen
 278:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 279:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread -> tx_thread_suspended_next =   thread_ptr;
 280:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     next_thread -> tx_thread_suspended_previous =   thread_ptr;
 281:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 282:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 283:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Increment the suspension count.  */
 284:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_suspended_count++;
 285:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 286:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Set the state to suspended.  */
 287:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_state =    TX_MUTEX_SUSP;
 288:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 289:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_NOT_INTERRUPTABLE
 290:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 291:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Determine if we need to raise the priority of the thread
 292:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                    owning the mutex.  */
 293:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 if (mutex_ptr -> tx_mutex_inherit == TX_TRUE)
 294:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 295:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 296:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Determine if this is the highest priority to raise for this mutex.  */
 297:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (mutex_ptr -> tx_mutex_highest_priority_waiting > thread_ptr -> tx_thread_pr
 298:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 299:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 300:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Remember this priority.  */
 301:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_ptr -> tx_mutex_highest_priority_waiting =  thread_ptr -> tx_thread_p
 302:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 303:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 304:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Determine if we have to update inherit priority level of the mutex owner.  *
 305:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (thread_ptr -> tx_thread_priority < mutex_owner -> tx_thread_inherit_priorit
 306:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 307:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 308:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Remember the new priority inheritance priority.  */
 309:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_owner -> tx_thread_inherit_priority =  thread_ptr -> tx_thread_priori
 310:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 311:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 312:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Priority inheritance is requested, check to see if the thread that owns the 
 313:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (mutex_owner -> tx_thread_priority > thread_ptr -> tx_thread_priority)
 314:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 315:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 316:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Yes, raise the suspended, owning thread's priority to that
 317:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                            of the current thread.  */
 318:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         _tx_mutex_priority_change(mutex_owner, thread_ptr -> tx_thread_priority);
 319:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 320:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_MUTEX_ENABLE_PERFORMANCE_INFO
 321:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 20


 322:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Increment the total mutex priority inheritance counter.  */
 323:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         _tx_mutex_performance__priority_inheritance_count++;
 324:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 325:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Increment the number of priority inheritance situations on this mutex.  
 326:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_ptr -> tx_mutex_performance__priority_inheritance_count++;
 327:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 328:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 329:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 330:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 331:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Call actual non-interruptable thread suspension routine.  */
 332:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 _tx_thread_system_ni_suspend(thread_ptr, wait_option);
 333:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 334:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Restore interrupts.  */
 335:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 TX_RESTORE
 336:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #else
 337:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 338:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Set the suspending flag.  */
 339:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_suspending =  TX_TRUE;
 340:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 341:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Setup the timeout period.  */
 342:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  wait_option;
 343:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 344:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Temporarily disable preemption.  */
 345:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 _tx_thread_preempt_disable++;
 346:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 347:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Restore interrupts.  */
 348:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 TX_RESTORE
 349:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 350:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Determine if we need to raise the priority of the thread
 351:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                    owning the mutex.  */
 352:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 if (mutex_ptr -> tx_mutex_inherit == TX_TRUE)
 353:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 354:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 355:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Determine if this is the highest priority to raise for this mutex.  */
 356:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (mutex_ptr -> tx_mutex_highest_priority_waiting > thread_ptr -> tx_thread_pr
 357:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 358:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 359:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Remember this priority.  */
 360:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_ptr -> tx_mutex_highest_priority_waiting =  thread_ptr -> tx_thread_p
 361:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 362:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 363:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Determine if we have to update inherit priority level of the mutex owner.  *
 364:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (thread_ptr -> tx_thread_priority < mutex_owner -> tx_thread_inherit_priorit
 365:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 366:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 367:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Remember the new priority inheritance priority.  */
 368:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_owner -> tx_thread_inherit_priority =  thread_ptr -> tx_thread_priori
 369:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 370:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 371:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     /* Priority inheritance is requested, check to see if the thread that owns the 
 372:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     if (mutex_owner -> tx_thread_priority > thread_ptr -> tx_thread_priority)
 373:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 374:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 375:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Yes, raise the suspended, owning thread's priority to that
 376:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                            of the current thread.  */
 377:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         _tx_mutex_priority_change(mutex_owner, thread_ptr -> tx_thread_priority);
 378:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 21


 379:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #ifdef TX_MUTEX_ENABLE_PERFORMANCE_INFO
 380:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 381:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Increment the total mutex priority inheritance counter.  */
 382:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         _tx_mutex_performance__priority_inheritance_count++;
 383:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 384:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         /* Increment the number of priority inheritance situations on this mutex.  
 385:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                         mutex_ptr -> tx_mutex_performance__priority_inheritance_count++;
 386:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 387:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 388:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 389:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 390:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Call actual thread suspension routine.  */
 391:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 _tx_thread_system_suspend(thread_ptr);
 392:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 393:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 /* Return the completion status.  */
 394:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 status =  thread_ptr -> tx_thread_suspend_status;
 395:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 396:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         }
 397:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         else
 398:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         {
 399:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 400:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Restore interrupts.  */
 401:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             TX_RESTORE
 402:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 403:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             /* Immediate return, return error completion.  */
 404:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             status =  TX_NOT_AVAILABLE;
 405:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         }
 406:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     }
 407:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 408:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     /* Return completion status.  */
 409:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     return(status);
 410:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** }
 167              		.loc 1 410 1 is_stmt 0 view .LVU57
 168 003e 38BD     		pop	{r3, r4, r5, pc}
 169              	.LVL11:
 170              	.L17:
 131:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 171              		.loc 1 131 17 is_stmt 1 view .LVU58
 131:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 172              		.loc 1 131 72 is_stmt 0 view .LVU59
 173 0040 E26A     		ldr	r2, [r4, #44]
 131:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 174              		.loc 1 131 57 view .LVU60
 175 0042 5A61     		str	r2, [r3, #20]
 134:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 176              		.loc 1 134 17 is_stmt 1 view .LVU61
 134:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 177              		.loc 1 134 64 is_stmt 0 view .LVU62
 178 0044 2022     		movs	r2, #32
 179 0046 9A62     		str	r2, [r3, #40]
 180 0048 EAE7     		b	.L4
 181              	.LVL12:
 182              	.L5:
 161:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_next =             mutex_ptr;
 183              		.loc 1 161 17 is_stmt 1 view .LVU63
 161:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_next =             mutex_ptr;
 184              		.loc 1 161 58 is_stmt 0 view .LVU64
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 22


 185 004a C4F8A430 		str	r3, [r4, #164]
 162:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_previous =         mutex_ptr;
 186              		.loc 1 162 17 is_stmt 1 view .LVU65
 162:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 mutex_ptr -> tx_mutex_owned_previous =         mutex_ptr;
 187              		.loc 1 162 50 is_stmt 0 view .LVU66
 188 004e DB62     		str	r3, [r3, #44]
 163:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 189              		.loc 1 163 17 is_stmt 1 view .LVU67
 163:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 190              		.loc 1 163 54 is_stmt 0 view .LVU68
 191 0050 1B63     		str	r3, [r3, #48]
 192 0052 EDE7     		b	.L6
 193              	.LVL13:
 194              	.L2:
 178:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 195              		.loc 1 178 10 is_stmt 1 view .LVU69
 178:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 196              		.loc 1 178 24 is_stmt 0 view .LVU70
 197 0054 DA68     		ldr	r2, [r3, #12]
 178:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     {
 198              		.loc 1 178 13 view .LVU71
 199 0056 A242     		cmp	r2, r4
 200 0058 28D0     		beq	.L18
 195:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         {
 201              		.loc 1 195 9 is_stmt 1 view .LVU72
 195:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         {
 202              		.loc 1 195 12 is_stmt 0 view .LVU73
 203 005a 0029     		cmp	r1, #0
 204 005c 4BD0     		beq	.L9
 199:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 205              		.loc 1 199 13 is_stmt 1 view .LVU74
 199:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 206              		.loc 1 199 44 is_stmt 0 view .LVU75
 207 005e 2948     		ldr	r0, .L21+4
 208 0060 0068     		ldr	r0, [r0]
 199:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             {
 209              		.loc 1 199 16 view .LVU76
 210 0062 48BB     		cbnz	r0, .L19
 214:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 211              		.loc 1 214 17 is_stmt 1 view .LVU77
 212              	.LVL14:
 248:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 213              		.loc 1 248 17 view .LVU78
 248:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 214              		.loc 1 248 57 is_stmt 0 view .LVU79
 215 0064 2848     		ldr	r0, .L21+8
 216 0066 A066     		str	r0, [r4, #104]
 252:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 217              		.loc 1 252 17 is_stmt 1 view .LVU80
 252:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 218              		.loc 1 252 63 is_stmt 0 view .LVU81
 219 0068 E366     		str	r3, [r4, #108]
 258:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 220              		.loc 1 258 17 is_stmt 1 view .LVU82
 258:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 221              		.loc 1 258 28 is_stmt 0 view .LVU83
 222 006a D4F8AC00 		ldr	r0, [r4, #172]
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 23


 258:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 223              		.loc 1 258 60 view .LVU84
 224 006e 0130     		adds	r0, r0, #1
 225 0070 C4F8AC00 		str	r0, [r4, #172]
 262:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 226              		.loc 1 262 17 is_stmt 1 view .LVU85
 262:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 227              		.loc 1 262 31 is_stmt 0 view .LVU86
 228 0074 D869     		ldr	r0, [r3, #28]
 262:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 229              		.loc 1 262 20 view .LVU87
 230 0076 18BB     		cbnz	r0, .L11
 267:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 231              		.loc 1 267 21 is_stmt 1 view .LVU88
 267:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 232              		.loc 1 267 59 is_stmt 0 view .LVU89
 233 0078 9C61     		str	r4, [r3, #24]
 268:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 234              		.loc 1 268 21 is_stmt 1 view .LVU90
 268:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 235              		.loc 1 268 60 is_stmt 0 view .LVU91
 236 007a 2467     		str	r4, [r4, #112]
 269:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 237              		.loc 1 269 21 is_stmt 1 view .LVU92
 269:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 238              		.loc 1 269 64 is_stmt 0 view .LVU93
 239 007c 6467     		str	r4, [r4, #116]
 240              	.L12:
 284:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 241              		.loc 1 284 17 is_stmt 1 view .LVU94
 284:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 242              		.loc 1 284 27 is_stmt 0 view .LVU95
 243 007e D869     		ldr	r0, [r3, #28]
 284:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 244              		.loc 1 284 54 view .LVU96
 245 0080 0130     		adds	r0, r0, #1
 246 0082 D861     		str	r0, [r3, #28]
 287:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 247              		.loc 1 287 17 is_stmt 1 view .LVU97
 287:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 248              		.loc 1 287 47 is_stmt 0 view .LVU98
 249 0084 0D20     		movs	r0, #13
 250 0086 2063     		str	r0, [r4, #48]
 339:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 251              		.loc 1 339 17 is_stmt 1 view .LVU99
 339:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 252              		.loc 1 339 52 is_stmt 0 view .LVU100
 253 0088 0120     		movs	r0, #1
 254 008a A063     		str	r0, [r4, #56]
 342:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 255              		.loc 1 342 17 is_stmt 1 view .LVU101
 342:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 256              		.loc 1 342 81 is_stmt 0 view .LVU102
 257 008c E164     		str	r1, [r4, #76]
 345:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 258              		.loc 1 345 17 is_stmt 1 view .LVU103
 345:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 24


 259              		.loc 1 345 43 is_stmt 0 view .LVU104
 260 008e 1D48     		ldr	r0, .L21+4
 261 0090 0168     		ldr	r1, [r0]
 262              	.LVL15:
 345:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 263              		.loc 1 345 43 view .LVU105
 264 0092 0131     		adds	r1, r1, #1
 265 0094 0160     		str	r1, [r0]
 348:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 266              		.loc 1 348 17 is_stmt 1 view .LVU106
 267              	.LVL16:
 268              	.LBB24:
 269              	.LBI24:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 270              		.loc 2 568 55 view .LVU107
 271              	.LBB25:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 272              		.loc 2 574 5 view .LVU108
 273              		.syntax unified
 274              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 275 0096 8CF31088 		MSR  PRIMASK,ip
 276              	@ 0 "" 2
 277              	.LVL17:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 278              		.loc 2 574 5 is_stmt 0 view .LVU109
 279              		.thumb
 280              		.syntax unified
 281              	.LBE25:
 282              	.LBE24:
 352:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 283              		.loc 1 352 17 is_stmt 1 view .LVU110
 352:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 284              		.loc 1 352 31 is_stmt 0 view .LVU111
 285 009a 1969     		ldr	r1, [r3, #16]
 352:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 {
 286              		.loc 1 352 20 view .LVU112
 287 009c 0129     		cmp	r1, #1
 288 009e 16D0     		beq	.L20
 289              	.LVL18:
 290              	.L13:
 391:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** #endif
 291              		.loc 1 391 17 is_stmt 1 view .LVU113
 292 00a0 2046     		mov	r0, r4
 293 00a2 FFF7FEFF 		bl	_tx_thread_system_suspend
 294              	.LVL19:
 394:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 295              		.loc 1 394 17 view .LVU114
 394:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 296              		.loc 1 394 24 is_stmt 0 view .LVU115
 297 00a6 D4F88400 		ldr	r0, [r4, #132]
 298              	.LVL20:
 394:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 299              		.loc 1 394 24 view .LVU116
 300 00aa C8E7     		b	.L1
 301              	.LVL21:
 302              	.L18:
 183:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 25


 303              		.loc 1 183 9 is_stmt 1 view .LVU117
 183:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 304              		.loc 1 183 46 is_stmt 0 view .LVU118
 305 00ac 0130     		adds	r0, r0, #1
 306 00ae 9860     		str	r0, [r3, #8]
 186:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 307              		.loc 1 186 9 is_stmt 1 view .LVU119
 308              	.LVL22:
 309              	.LBB26:
 310              	.LBI26:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 311              		.loc 2 568 55 view .LVU120
 312              	.LBB27:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 313              		.loc 2 574 5 view .LVU121
 314              		.syntax unified
 315              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 316 00b0 8CF31088 		MSR  PRIMASK,ip
 317              	@ 0 "" 2
 318              	.LVL23:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 319              		.loc 2 574 5 is_stmt 0 view .LVU122
 320              		.thumb
 321              		.syntax unified
 322              	.LBE27:
 323              	.LBE26:
 189:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     }
 324              		.loc 1 189 9 is_stmt 1 view .LVU123
 189:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****     }
 325              		.loc 1 189 16 is_stmt 0 view .LVU124
 326 00b4 0020     		movs	r0, #0
 327 00b6 C2E7     		b	.L1
 328              	.LVL24:
 329              	.L19:
 203:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 330              		.loc 1 203 17 is_stmt 1 view .LVU125
 331              	.LBB28:
 332              	.LBI28:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 333              		.loc 2 568 55 view .LVU126
 334              	.LBB29:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 335              		.loc 2 574 5 view .LVU127
 336              		.syntax unified
 337              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 338 00b8 8CF31088 		MSR  PRIMASK,ip
 339              	@ 0 "" 2
 340              	.LVL25:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 341              		.loc 2 574 5 is_stmt 0 view .LVU128
 342              		.thumb
 343              		.syntax unified
 344              	.LBE29:
 345              	.LBE28:
 206:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
 346              		.loc 1 206 17 is_stmt 1 view .LVU129
 206:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****             }
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 26


 347              		.loc 1 206 24 is_stmt 0 view .LVU130
 348 00bc 1D20     		movs	r0, #29
 349 00be BEE7     		b	.L1
 350              	.LVL26:
 351              	.L11:
 275:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        next_thread;
 352              		.loc 1 275 21 is_stmt 1 view .LVU131
 275:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_next =        next_thread;
 353              		.loc 1 275 33 is_stmt 0 view .LVU132
 354 00c0 9869     		ldr	r0, [r3, #24]
 355              	.LVL27:
 276:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread =                               next_thread -> tx_thread_suspen
 356              		.loc 1 276 21 is_stmt 1 view .LVU133
 276:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread =                               next_thread -> tx_thread_suspen
 357              		.loc 1 276 60 is_stmt 0 view .LVU134
 358 00c2 2067     		str	r0, [r4, #112]
 277:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 359              		.loc 1 277 21 is_stmt 1 view .LVU135
 277:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 360              		.loc 1 277 37 is_stmt 0 view .LVU136
 361 00c4 456F     		ldr	r5, [r0, #116]
 362              	.LVL28:
 278:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread -> tx_thread_suspended_next =   thread_ptr;
 363              		.loc 1 278 21 is_stmt 1 view .LVU137
 278:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     previous_thread -> tx_thread_suspended_next =   thread_ptr;
 364              		.loc 1 278 64 is_stmt 0 view .LVU138
 365 00c6 6567     		str	r5, [r4, #116]
 279:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     next_thread -> tx_thread_suspended_previous =   thread_ptr;
 366              		.loc 1 279 21 is_stmt 1 view .LVU139
 279:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     next_thread -> tx_thread_suspended_previous =   thread_ptr;
 367              		.loc 1 279 65 is_stmt 0 view .LVU140
 368 00c8 2C67     		str	r4, [r5, #112]
 280:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 369              		.loc 1 280 21 is_stmt 1 view .LVU141
 280:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                 }
 370              		.loc 1 280 65 is_stmt 0 view .LVU142
 371 00ca 4467     		str	r4, [r0, #116]
 372 00cc D7E7     		b	.L12
 373              	.LVL29:
 374              	.L20:
 356:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 375              		.loc 1 356 21 is_stmt 1 view .LVU143
 356:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 376              		.loc 1 356 35 is_stmt 0 view .LVU144
 377 00ce 986A     		ldr	r0, [r3, #40]
 356:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 378              		.loc 1 356 85 view .LVU145
 379 00d0 E16A     		ldr	r1, [r4, #44]
 356:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 380              		.loc 1 356 24 view .LVU146
 381 00d2 8842     		cmp	r0, r1
 382 00d4 00D9     		bls	.L14
 360:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 383              		.loc 1 360 25 is_stmt 1 view .LVU147
 360:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 384              		.loc 1 360 72 is_stmt 0 view .LVU148
 385 00d6 9962     		str	r1, [r3, #40]
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 27


 386              	.LVL30:
 387              	.L14:
 364:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 388              		.loc 1 364 21 is_stmt 1 view .LVU149
 364:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 389              		.loc 1 364 36 is_stmt 0 view .LVU150
 390 00d8 E36A     		ldr	r3, [r4, #44]
 391              	.LVL31:
 364:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 392              		.loc 1 364 72 view .LVU151
 393 00da D2F89C10 		ldr	r1, [r2, #156]
 364:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 394              		.loc 1 364 24 view .LVU152
 395 00de 8B42     		cmp	r3, r1
 396 00e0 01D2     		bcs	.L15
 368:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 397              		.loc 1 368 25 is_stmt 1 view .LVU153
 368:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     }
 398              		.loc 1 368 67 is_stmt 0 view .LVU154
 399 00e2 C2F89C30 		str	r3, [r2, #156]
 400              	.L15:
 372:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 401              		.loc 1 372 21 is_stmt 1 view .LVU155
 372:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 402              		.loc 1 372 37 is_stmt 0 view .LVU156
 403 00e6 D36A     		ldr	r3, [r2, #44]
 372:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 404              		.loc 1 372 72 view .LVU157
 405 00e8 E16A     		ldr	r1, [r4, #44]
 372:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****                     {
 406              		.loc 1 372 24 view .LVU158
 407 00ea 8B42     		cmp	r3, r1
 408 00ec D8D9     		bls	.L13
 377:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 409              		.loc 1 377 25 is_stmt 1 view .LVU159
 410 00ee 1046     		mov	r0, r2
 411 00f0 FFF7FEFF 		bl	_tx_mutex_priority_change
 412              	.LVL32:
 377:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 413              		.loc 1 377 25 is_stmt 0 view .LVU160
 414 00f4 D4E7     		b	.L13
 415              	.LVL33:
 416              	.L9:
 401:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** 
 417              		.loc 1 401 13 is_stmt 1 view .LVU161
 418              	.LBB30:
 419              	.LBI30:
 568:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 420              		.loc 2 568 55 view .LVU162
 421              	.LBB31:
 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 422              		.loc 2 574 5 view .LVU163
 423              		.syntax unified
 424              	@ 574 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
 425 00f6 8CF31088 		MSR  PRIMASK,ip
 426              	@ 0 "" 2
 427              	.LVL34:
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 28


 574:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 428              		.loc 2 574 5 is_stmt 0 view .LVU164
 429              		.thumb
 430              		.syntax unified
 431              	.LBE31:
 432              	.LBE30:
 404:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         }
 433              		.loc 1 404 13 is_stmt 1 view .LVU165
 404:Middlewares/ST/threadx/common/src/tx_mutex_get.c ****         }
 434              		.loc 1 404 20 is_stmt 0 view .LVU166
 435 00fa 1D20     		movs	r0, #29
 409:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** }
 436              		.loc 1 409 5 is_stmt 1 view .LVU167
 409:Middlewares/ST/threadx/common/src/tx_mutex_get.c **** }
 437              		.loc 1 409 11 is_stmt 0 view .LVU168
 438 00fc 9FE7     		b	.L1
 439              	.L22:
 440 00fe 00BF     		.align	2
 441              	.L21:
 442 0100 00000000 		.word	_tx_thread_current_ptr
 443 0104 00000000 		.word	_tx_thread_preempt_disable
 444 0108 00000000 		.word	_tx_mutex_cleanup
 445              		.cfi_endproc
 446              	.LFE8:
 448              		.text
 449              	.Letext0:
 450              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 451              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
 452              		.file 5 "Middlewares/ST/threadx/common/inc/tx_mutex.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 tx_mutex_get.c
C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s:20     .text._tx_mutex_get:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s:26     .text._tx_mutex_get:00000000 _tx_mutex_get
C:\Users\HP\AppData\Local\Temp\ccbfHIf3.s:442    .text._tx_mutex_get:00000100 $d

UNDEFINED SYMBOLS
_tx_thread_system_suspend
_tx_mutex_priority_change
_tx_thread_current_ptr
_tx_thread_preempt_disable
_tx_mutex_cleanup
