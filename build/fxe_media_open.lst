ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"fxe_media_open.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._fxe_media_open,"ax",%progbits
  20              		.align	1
  21              		.global	_fxe_media_open
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_fxe_media_open:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 1 "Middlewares/ST/filex/common/src/fxe_media_open.c"
   1:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
   2:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
   3:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
   5:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  10:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  11:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  12:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  13:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  14:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  15:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**                                                                       */
  16:Middlewares/ST/filex/common/src/fxe_media_open.c **** /** FileX Component                                                       */
  17:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**                                                                       */
  18:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**   Media                                                               */
  19:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**                                                                       */
  20:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  21:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  22:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  23:Middlewares/ST/filex/common/src/fxe_media_open.c **** #define FX_SOURCE_CODE
  24:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  25:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  26:Middlewares/ST/filex/common/src/fxe_media_open.c **** /* Include necessary system files.  */
  27:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  28:Middlewares/ST/filex/common/src/fxe_media_open.c **** #include "fx_api.h"
  29:Middlewares/ST/filex/common/src/fxe_media_open.c **** #include "fx_media.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 2


  30:Middlewares/ST/filex/common/src/fxe_media_open.c **** #include "fx_system.h"
  31:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  32:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  33:Middlewares/ST/filex/common/src/fxe_media_open.c **** FX_CALLER_CHECKING_EXTERNS
  34:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  35:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  36:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  37:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  38:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  FUNCTION                                               RELEASE        */
  39:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  40:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    _fxe_media_open                                     PORTABLE C      */
  41:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                           6.1          */
  42:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  AUTHOR                                                                */
  43:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  44:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    William E. Lamie, Microsoft Corporation                             */
  45:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  46:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  DESCRIPTION                                                           */
  47:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  48:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    This function checks for errors in the media open call.             */
  49:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  50:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  INPUT                                                                 */
  51:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  52:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    media_ptr                             Media control block pointer   */
  53:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    media_name                            Pointer to media name string  */
  54:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    media_driver                          Media driver entry function   */
  55:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    driver_info_ptr                       Optional information pointer  */
  56:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            supplied to media driver    */
  57:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    memory_ptr                            Pointer to memory used by the */
  58:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            FileX for this media.       */
  59:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    memory_size                           Size of media memory - must   */
  60:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            at least 512 bytes and      */
  61:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            one sector size.            */
  62:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    media_control_block_size              Size of FX_MEDIA structure    */
  63:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  64:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  OUTPUT                                                                */
  65:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  66:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    FX_PTR_ERROR                          One or more input parameters  */
  67:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            are NULL                    */
  68:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    status                                Actual completion status      */
  69:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  70:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  CALLS                                                                 */
  71:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  72:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    tx_thread_identify                    Get current thread            */
  73:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    tx_thread_preemption_change           Disable/restore preemption    */
  74:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    _fx_media_open                        Actual media open service     */
  75:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  76:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  CALLED BY                                                             */
  77:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  78:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    Application Code                                                    */
  79:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  80:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  RELEASE HISTORY                                                       */
  81:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  82:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*    DATE              NAME                      DESCRIPTION             */
  83:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  84:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  85:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*  09-30-2020     William E. Lamie         Modified comment(s),          */
  86:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                            resulting in version 6.1    */
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 3


  87:Middlewares/ST/filex/common/src/fxe_media_open.c **** /*                                                                        */
  88:Middlewares/ST/filex/common/src/fxe_media_open.c **** /**************************************************************************/
  89:Middlewares/ST/filex/common/src/fxe_media_open.c **** UINT  _fxe_media_open(FX_MEDIA *media_ptr, CHAR *media_name,
  90:Middlewares/ST/filex/common/src/fxe_media_open.c ****                       VOID (*media_driver)(FX_MEDIA *), VOID *driver_info_ptr,
  91:Middlewares/ST/filex/common/src/fxe_media_open.c ****                       VOID *memory_ptr, ULONG memory_size, UINT media_control_block_size)
  92:Middlewares/ST/filex/common/src/fxe_media_open.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 12, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  94:Middlewares/ST/filex/common/src/fxe_media_open.c **** UINT       status;
  34              		.loc 1 94 1 view .LVU1
  95:Middlewares/ST/filex/common/src/fxe_media_open.c **** ULONG      temp;
  35              		.loc 1 95 1 view .LVU2
  96:Middlewares/ST/filex/common/src/fxe_media_open.c **** FX_MEDIA  *current_media;
  36              		.loc 1 96 1 view .LVU3
  97:Middlewares/ST/filex/common/src/fxe_media_open.c **** ULONG      open_count;
  37              		.loc 1 97 1 view .LVU4
  98:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  99:Middlewares/ST/filex/common/src/fxe_media_open.c **** #ifndef FX_SINGLE_THREAD
 100:Middlewares/ST/filex/common/src/fxe_media_open.c **** TX_THREAD *current_thread;
  38              		.loc 1 100 1 view .LVU5
 101:Middlewares/ST/filex/common/src/fxe_media_open.c **** UINT       old_threshold;
  39              		.loc 1 101 1 view .LVU6
 102:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 103:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 104:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 105:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Check for invalid input pointers.  */
 106:Middlewares/ST/filex/common/src/fxe_media_open.c ****     if ((media_ptr == FX_NULL) || (media_driver == FX_NULL) || (memory_ptr == FX_NULL) || (media_co
  40              		.loc 1 106 5 view .LVU7
  41              		.loc 1 106 8 is_stmt 0 view .LVU8
  42 0000 0028     		cmp	r0, #0
  43 0002 59D0     		beq	.L6
  92:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
  44              		.loc 1 92 1 discriminator 1 view .LVU9
  45 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 24
  48              		.cfi_offset 4, -24
  49              		.cfi_offset 5, -20
  50              		.cfi_offset 6, -16
  51              		.cfi_offset 7, -12
  52              		.cfi_offset 8, -8
  53              		.cfi_offset 14, -4
  54 0008 84B0     		sub	sp, sp, #16
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 40
  57 000a 0E46     		mov	r6, r1
  58 000c 1546     		mov	r5, r2
  59 000e 1C46     		mov	r4, r3
  60 0010 0746     		mov	r7, r0
  61              		.loc 1 106 32 discriminator 1 view .LVU10
  62 0012 002A     		cmp	r2, #0
  63 0014 52D0     		beq	.L7
  64              		.loc 1 106 61 discriminator 2 view .LVU11
  65 0016 0A9B     		ldr	r3, [sp, #40]
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 4


  66              	.LVL1:
  67              		.loc 1 106 61 discriminator 2 view .LVU12
  68 0018 002B     		cmp	r3, #0
  69 001a 51D0     		beq	.L8
  70              		.loc 1 106 88 discriminator 3 view .LVU13
  71 001c 0C9A     		ldr	r2, [sp, #48]
  72              	.LVL2:
  73              		.loc 1 106 88 discriminator 3 view .LVU14
  74 001e 42F2B843 		movw	r3, #9400
  75 0022 9A42     		cmp	r2, r3
  76 0024 4ED1     		bne	.L9
 107:Middlewares/ST/filex/common/src/fxe_media_open.c ****     {
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****         return(FX_PTR_ERROR);
 109:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 110:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 111:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Check for a valid caller.  */
 112:Middlewares/ST/filex/common/src/fxe_media_open.c ****     FX_CALLER_CHECKING_CODE
  77              		.loc 1 112 5 is_stmt 1 view .LVU15
  78              	.LBB4:
  79              	.LBI4:
  80              		.file 2 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M4/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 5


  37:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  84:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 6


  94:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 141:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 7


 151:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 198:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 8


 208:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 255:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 9


 265:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 312:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 10


 322:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 369:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 11


 379:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 426:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 12


 436:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 483:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
  81              		.loc 2 486 63 view .LVU16
  82              	.LBB5:
 487:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
  83              		.loc 2 488 1 view .LVU17
 489:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 13


  84              		.loc 2 489 5 view .LVU18
  85              		.syntax unified
  86              	@ 489 "Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h" 1
  87 0026 EFF30583 		 MRS  r3,IPSR 
  88              	@ 0 "" 2
  89              	.LVL3:
 490:Middlewares/ST/threadx/ports/cortex_m4/gnu/inc/tx_port.h ****     return(ipsr_value);
  90              		.loc 2 490 5 view .LVU19
  91              		.loc 2 490 5 is_stmt 0 view .LVU20
  92              		.thumb
  93              		.syntax unified
  94              	.LBE5:
  95              	.LBE4:
  96              		.loc 1 112 5 view .LVU21
  97 002a 2E4A     		ldr	r2, .L24
  98 002c 1268     		ldr	r2, [r2]
  99 002e 1343     		orrs	r3, r2, r3
 100 0030 4CD1     		bne	.L10
 101              		.loc 1 112 5 discriminator 2 view .LVU22
 102 0032 2D4B     		ldr	r3, .L24+4
 103 0034 1B68     		ldr	r3, [r3]
 104 0036 002B     		cmp	r3, #0
 105 0038 4AD0     		beq	.L11
 106              		.loc 1 112 5 discriminator 4 view .LVU23
 107 003a 2C4A     		ldr	r2, .L24+8
 108 003c 9342     		cmp	r3, r2
 109 003e 49D0     		beq	.L12
 113:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 114:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Check for proper size of the logical sector cache.  */
 115:Middlewares/ST/filex/common/src/fxe_media_open.c ****     temp =  _fx_system_media_max_sector_cache;
 110              		.loc 1 115 5 is_stmt 1 view .LVU24
 111              		.loc 1 115 10 is_stmt 0 view .LVU25
 112 0040 2B4B     		ldr	r3, .L24+12
 113 0042 1A68     		ldr	r2, [r3]
 114              	.LVL4:
 116:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 117:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Isolate the lowest set bit.  */
 118:Middlewares/ST/filex/common/src/fxe_media_open.c ****     temp =  (temp & ((~temp) + ((ULONG) 1)));
 115              		.loc 1 118 5 is_stmt 1 view .LVU26
 116              		.loc 1 118 30 is_stmt 0 view .LVU27
 117 0044 5342     		rsbs	r3, r2, #0
 118              		.loc 1 118 10 view .LVU28
 119 0046 1340     		ands	r3, r3, r2
 120              	.LVL5:
 119:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 120:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* If FX_MAX_SECTOR_CACHE is a power of 2, the value of temp should be unchanged.  */
 121:Middlewares/ST/filex/common/src/fxe_media_open.c ****     if ((temp == 1) || (temp != _fx_system_media_max_sector_cache))
 121              		.loc 1 121 5 is_stmt 1 view .LVU29
 122              		.loc 1 121 8 is_stmt 0 view .LVU30
 123 0048 012B     		cmp	r3, #1
 124 004a 45D0     		beq	.L13
 125              		.loc 1 121 21 discriminator 1 view .LVU31
 126 004c 9A42     		cmp	r2, r3
 127 004e 45D1     		bne	.L14
 122:Middlewares/ST/filex/common/src/fxe_media_open.c ****     {
 123:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 124:Middlewares/ST/filex/common/src/fxe_media_open.c ****         /* Not a power of 2, return an error.  */
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 14


 125:Middlewares/ST/filex/common/src/fxe_media_open.c ****         return(FX_MEDIA_INVALID);
 126:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 127:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 128:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Check for proper size of the FAT cache.  */
 129:Middlewares/ST/filex/common/src/fxe_media_open.c ****     temp =  _fx_system_media_max_fat_cache;
 128              		.loc 1 129 5 is_stmt 1 view .LVU32
 129              		.loc 1 129 10 is_stmt 0 view .LVU33
 130 0050 284B     		ldr	r3, .L24+16
 131              	.LVL6:
 132              		.loc 1 129 10 view .LVU34
 133 0052 1A68     		ldr	r2, [r3]
 134              	.LVL7:
 130:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 131:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Isolate the lowest set bit.  */
 132:Middlewares/ST/filex/common/src/fxe_media_open.c ****     temp =  (temp & ((~temp) + ((ULONG) 1)));
 135              		.loc 1 132 5 is_stmt 1 view .LVU35
 136              		.loc 1 132 30 is_stmt 0 view .LVU36
 137 0054 5342     		rsbs	r3, r2, #0
 138              		.loc 1 132 10 view .LVU37
 139 0056 1340     		ands	r3, r3, r2
 140              	.LVL8:
 133:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 134:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* If FX_MAX_FAT_CACHE is a power of 2, the value of temp should be unchanged.  */
 135:Middlewares/ST/filex/common/src/fxe_media_open.c ****     if ((temp == 1) || (temp != _fx_system_media_max_fat_cache))
 141              		.loc 1 135 5 is_stmt 1 view .LVU38
 142              		.loc 1 135 8 is_stmt 0 view .LVU39
 143 0058 012B     		cmp	r3, #1
 144 005a 41D0     		beq	.L15
 145              		.loc 1 135 21 discriminator 1 view .LVU40
 146 005c 9A42     		cmp	r2, r3
 147 005e 01D0     		beq	.L21
 136:Middlewares/ST/filex/common/src/fxe_media_open.c ****     {
 137:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 138:Middlewares/ST/filex/common/src/fxe_media_open.c ****         /* Not a power of 2, return an error.  */
 139:Middlewares/ST/filex/common/src/fxe_media_open.c ****         return(FX_MEDIA_INVALID);
 148              		.loc 1 139 15 view .LVU41
 149 0060 0220     		movs	r0, #2
 150              	.LVL9:
 151              		.loc 1 139 15 view .LVU42
 152 0062 30E0     		b	.L1
 153              	.LVL10:
 154              	.L21:
 140:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 141:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 142:Middlewares/ST/filex/common/src/fxe_media_open.c **** #ifndef FX_SINGLE_THREAD
 143:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 144:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Pickup current thread pointer. At this point we know the current thread pointer is non-null 
 145:Middlewares/ST/filex/common/src/fxe_media_open.c ****        it was checked by code in FX_CALLER_CHECKING_CODE macro.  */
 146:Middlewares/ST/filex/common/src/fxe_media_open.c ****     current_thread =  tx_thread_identify();
 155              		.loc 1 146 5 is_stmt 1 view .LVU43
 156              		.loc 1 146 23 is_stmt 0 view .LVU44
 157 0064 FFF7FEFF 		bl	_tx_thread_identify
 158              	.LVL11:
 159              		.loc 1 146 23 view .LVU45
 160 0068 8046     		mov	r8, r0
 161              	.LVL12:
 147:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 15


 148:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Disable preemption temporarily.  */
 149:Middlewares/ST/filex/common/src/fxe_media_open.c ****     tx_thread_preemption_change(current_thread, 0, &old_threshold);
 162              		.loc 1 149 5 is_stmt 1 view .LVU46
 163 006a 03AA     		add	r2, sp, #12
 164 006c 0021     		movs	r1, #0
 165 006e FFF7FEFF 		bl	_tx_thread_preemption_change
 166              	.LVL13:
 150:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 151:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 152:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Loop to check for the media already opened.  */
 153:Middlewares/ST/filex/common/src/fxe_media_open.c ****     current_media =  _fx_system_media_opened_ptr;
 167              		.loc 1 153 5 view .LVU47
 168              		.loc 1 153 19 is_stmt 0 view .LVU48
 169 0072 214B     		ldr	r3, .L24+20
 170 0074 1A68     		ldr	r2, [r3]
 171              	.LVL14:
 154:Middlewares/ST/filex/common/src/fxe_media_open.c ****     open_count =     _fx_system_media_opened_count;
 172              		.loc 1 154 5 is_stmt 1 view .LVU49
 173              		.loc 1 154 16 is_stmt 0 view .LVU50
 174 0076 214B     		ldr	r3, .L24+24
 175 0078 1B68     		ldr	r3, [r3]
 176              	.LVL15:
 155:Middlewares/ST/filex/common/src/fxe_media_open.c ****     while (open_count--)
 177              		.loc 1 155 5 is_stmt 1 view .LVU51
 178              	.L3:
 179              		.loc 1 155 11 view .LVU52
 180              		.loc 1 155 22 is_stmt 0 view .LVU53
 181 007a 591E     		subs	r1, r3, #1
 182              	.LVL16:
 183              		.loc 1 155 11 view .LVU54
 184 007c 63B1     		cbz	r3, .L22
 156:Middlewares/ST/filex/common/src/fxe_media_open.c ****     {
 157:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 158:Middlewares/ST/filex/common/src/fxe_media_open.c ****         /* Is the new media pointer already open?  */
 159:Middlewares/ST/filex/common/src/fxe_media_open.c ****         if (media_ptr == current_media)
 185              		.loc 1 159 9 is_stmt 1 view .LVU55
 186              		.loc 1 159 12 is_stmt 0 view .LVU56
 187 007e BA42     		cmp	r2, r7
 188 0080 03D0     		beq	.L23
 160:Middlewares/ST/filex/common/src/fxe_media_open.c ****         {
 161:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 162:Middlewares/ST/filex/common/src/fxe_media_open.c **** #ifndef FX_SINGLE_THREAD
 163:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 164:Middlewares/ST/filex/common/src/fxe_media_open.c ****             /* Restore preemption.  */
 165:Middlewares/ST/filex/common/src/fxe_media_open.c ****             tx_thread_preemption_change(current_thread, old_threshold, &old_threshold);
 166:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 167:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 168:Middlewares/ST/filex/common/src/fxe_media_open.c ****             /* Duplicate media open, return an error!  */
 169:Middlewares/ST/filex/common/src/fxe_media_open.c ****             return(FX_PTR_ERROR);
 170:Middlewares/ST/filex/common/src/fxe_media_open.c ****         }
 171:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 172:Middlewares/ST/filex/common/src/fxe_media_open.c ****         /* Move to next entry.  */
 173:Middlewares/ST/filex/common/src/fxe_media_open.c ****         current_media =  current_media -> fx_media_opened_next;
 189              		.loc 1 173 9 is_stmt 1 view .LVU57
 190              		.loc 1 173 23 is_stmt 0 view .LVU58
 191 0082 D2F8D020 		ldr	r2, [r2, #208]
 192              	.LVL17:
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 16


 155:Middlewares/ST/filex/common/src/fxe_media_open.c ****     {
 193              		.loc 1 155 22 view .LVU59
 194 0086 0B46     		mov	r3, r1
 195 0088 F7E7     		b	.L3
 196              	.L23:
 165:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 197              		.loc 1 165 13 is_stmt 1 view .LVU60
 198 008a 03AA     		add	r2, sp, #12
 199              	.LVL18:
 165:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 200              		.loc 1 165 13 is_stmt 0 view .LVU61
 201 008c 0399     		ldr	r1, [sp, #12]
 202              	.LVL19:
 165:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 203              		.loc 1 165 13 view .LVU62
 204 008e 4046     		mov	r0, r8
 205 0090 FFF7FEFF 		bl	_tx_thread_preemption_change
 206              	.LVL20:
 169:Middlewares/ST/filex/common/src/fxe_media_open.c ****         }
 207              		.loc 1 169 13 is_stmt 1 view .LVU63
 169:Middlewares/ST/filex/common/src/fxe_media_open.c ****         }
 208              		.loc 1 169 19 is_stmt 0 view .LVU64
 209 0094 1820     		movs	r0, #24
 210 0096 16E0     		b	.L1
 211              	.LVL21:
 212              	.L22:
 174:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 175:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 176:Middlewares/ST/filex/common/src/fxe_media_open.c **** #ifndef FX_SINGLE_THREAD
 177:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 178:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Restore preemption.  */
 179:Middlewares/ST/filex/common/src/fxe_media_open.c ****     tx_thread_preemption_change(current_thread, old_threshold, &old_threshold);
 213              		.loc 1 179 5 is_stmt 1 view .LVU65
 214 0098 03AA     		add	r2, sp, #12
 215              	.LVL22:
 216              		.loc 1 179 5 is_stmt 0 view .LVU66
 217 009a 0399     		ldr	r1, [sp, #12]
 218              	.LVL23:
 219              		.loc 1 179 5 view .LVU67
 220 009c 4046     		mov	r0, r8
 221 009e FFF7FEFF 		bl	_tx_thread_preemption_change
 222              	.LVL24:
 180:Middlewares/ST/filex/common/src/fxe_media_open.c **** #endif
 181:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 182:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Call actual media open service.  */
 183:Middlewares/ST/filex/common/src/fxe_media_open.c ****     status =  _fx_media_open(media_ptr, media_name, media_driver, driver_info_ptr,
 223              		.loc 1 183 5 is_stmt 1 view .LVU68
 224              		.loc 1 183 15 is_stmt 0 view .LVU69
 225 00a2 0B9B     		ldr	r3, [sp, #44]
 226 00a4 0193     		str	r3, [sp, #4]
 227 00a6 0A9B     		ldr	r3, [sp, #40]
 228 00a8 0093     		str	r3, [sp]
 229 00aa 2346     		mov	r3, r4
 230 00ac 2A46     		mov	r2, r5
 231 00ae 3146     		mov	r1, r6
 232 00b0 3846     		mov	r0, r7
 233 00b2 FFF7FEFF 		bl	_fx_media_open
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 17


 234              	.LVL25:
 184:Middlewares/ST/filex/common/src/fxe_media_open.c ****                              memory_ptr, memory_size);
 185:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 186:Middlewares/ST/filex/common/src/fxe_media_open.c ****     /* Return status.  */
 187:Middlewares/ST/filex/common/src/fxe_media_open.c ****     return(status);
 235              		.loc 1 187 5 is_stmt 1 view .LVU70
 236              		.loc 1 187 11 is_stmt 0 view .LVU71
 237 00b6 06E0     		b	.L1
 238              	.LVL26:
 239              	.L6:
 240              	.LCFI2:
 241              		.cfi_def_cfa_offset 0
 242              		.cfi_restore 4
 243              		.cfi_restore 5
 244              		.cfi_restore 6
 245              		.cfi_restore 7
 246              		.cfi_restore 8
 247              		.cfi_restore 14
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 248              		.loc 1 108 15 view .LVU72
 249 00b8 1820     		movs	r0, #24
 250              	.LVL27:
 188:Middlewares/ST/filex/common/src/fxe_media_open.c **** }
 251              		.loc 1 188 1 view .LVU73
 252 00ba 7047     		bx	lr
 253              	.LVL28:
 254              	.L7:
 255              	.LCFI3:
 256              		.cfi_def_cfa_offset 40
 257              		.cfi_offset 4, -24
 258              		.cfi_offset 5, -20
 259              		.cfi_offset 6, -16
 260              		.cfi_offset 7, -12
 261              		.cfi_offset 8, -8
 262              		.cfi_offset 14, -4
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 263              		.loc 1 108 15 view .LVU74
 264 00bc 1820     		movs	r0, #24
 265              	.LVL29:
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 266              		.loc 1 108 15 view .LVU75
 267 00be 02E0     		b	.L1
 268              	.LVL30:
 269              	.L8:
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 270              		.loc 1 108 15 view .LVU76
 271 00c0 1820     		movs	r0, #24
 272              	.LVL31:
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 273              		.loc 1 108 15 view .LVU77
 274 00c2 00E0     		b	.L1
 275              	.LVL32:
 276              	.L9:
 108:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 277              		.loc 1 108 15 view .LVU78
 278 00c4 1820     		movs	r0, #24
 279              	.LVL33:
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 18


 280              	.L1:
 281              		.loc 1 188 1 view .LVU79
 282 00c6 04B0     		add	sp, sp, #16
 283              	.LCFI4:
 284              		.cfi_remember_state
 285              		.cfi_def_cfa_offset 24
 286              		@ sp needed
 287 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 288              	.LVL34:
 289              	.L10:
 290              	.LCFI5:
 291              		.cfi_restore_state
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 292              		.loc 1 112 5 view .LVU80
 293 00cc 2020     		movs	r0, #32
 294              	.LVL35:
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 295              		.loc 1 112 5 view .LVU81
 296 00ce FAE7     		b	.L1
 297              	.LVL36:
 298              	.L11:
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 299              		.loc 1 112 5 view .LVU82
 300 00d0 2020     		movs	r0, #32
 301              	.LVL37:
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 302              		.loc 1 112 5 view .LVU83
 303 00d2 F8E7     		b	.L1
 304              	.LVL38:
 305              	.L12:
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 306              		.loc 1 112 5 view .LVU84
 307 00d4 2020     		movs	r0, #32
 308              	.LVL39:
 112:Middlewares/ST/filex/common/src/fxe_media_open.c **** 
 309              		.loc 1 112 5 view .LVU85
 310 00d6 F6E7     		b	.L1
 311              	.LVL40:
 312              	.L13:
 125:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 313              		.loc 1 125 15 view .LVU86
 314 00d8 0220     		movs	r0, #2
 315              	.LVL41:
 125:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 316              		.loc 1 125 15 view .LVU87
 317 00da F4E7     		b	.L1
 318              	.LVL42:
 319              	.L14:
 125:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 320              		.loc 1 125 15 view .LVU88
 321 00dc 0220     		movs	r0, #2
 322              	.LVL43:
 125:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 323              		.loc 1 125 15 view .LVU89
 324 00de F2E7     		b	.L1
 325              	.LVL44:
 326              	.L15:
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 19


 139:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 327              		.loc 1 139 15 view .LVU90
 328 00e0 0220     		movs	r0, #2
 329              	.LVL45:
 139:Middlewares/ST/filex/common/src/fxe_media_open.c ****     }
 330              		.loc 1 139 15 view .LVU91
 331 00e2 F0E7     		b	.L1
 332              	.L25:
 333              		.align	2
 334              	.L24:
 335 00e4 00000000 		.word	_tx_thread_system_state
 336 00e8 00000000 		.word	_tx_thread_current_ptr
 337 00ec 00000000 		.word	_tx_timer_thread
 338 00f0 00000000 		.word	_fx_system_media_max_sector_cache
 339 00f4 00000000 		.word	_fx_system_media_max_fat_cache
 340 00f8 00000000 		.word	_fx_system_media_opened_ptr
 341 00fc 00000000 		.word	_fx_system_media_opened_count
 342              		.cfi_endproc
 343              	.LFE8:
 345              		.text
 346              	.Letext0:
 347              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 348              		.file 4 "Middlewares/ST/filex/common/inc/fx_api.h"
 349              		.file 5 "Middlewares/ST/filex/common/inc/fx_system.h"
 350              		.file 6 "Middlewares/ST/filex/common/inc/fx_media.h"
ARM GAS  C:\Users\HP\AppData\Local\Temp\cciGowma.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 fxe_media_open.c
C:\Users\HP\AppData\Local\Temp\cciGowma.s:20     .text._fxe_media_open:00000000 $t
C:\Users\HP\AppData\Local\Temp\cciGowma.s:26     .text._fxe_media_open:00000000 _fxe_media_open
C:\Users\HP\AppData\Local\Temp\cciGowma.s:335    .text._fxe_media_open:000000e4 $d

UNDEFINED SYMBOLS
_tx_thread_identify
_tx_thread_preemption_change
_fx_media_open
_tx_thread_system_state
_tx_thread_current_ptr
_tx_timer_thread
_fx_system_media_max_sector_cache
_fx_system_media_max_fat_cache
_fx_system_media_opened_ptr
_fx_system_media_opened_count
